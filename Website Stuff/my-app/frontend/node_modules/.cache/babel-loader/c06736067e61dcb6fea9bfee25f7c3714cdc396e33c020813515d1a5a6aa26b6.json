{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const [auth, setAuth] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\n    const userUID = localStorage.getItem('userUID');\n    const userEmail = localStorage.getItem('userEmail');\n    if (!isAuthenticated || !userUID || !userEmail) {\n      // If tampering is detected, set isAuthenticated to \"Nice Try\"\n      if (isAuthenticated && (!userUID || !userEmail)) {\n        localStorage.setItem('isAuthenticated', 'Nice Try');\n      }\n      navigate('/login'); // Redirect to login\n    } else {\n      setAuth(true); // Set authenticated state to true\n    }\n  }, [navigate]);\n  return auth ? children : null; // Render children (protected page) only if authenticated\n}\n_s(ProtectedRoute, \"S4sYVnXvjNaFBZe2E7U+3YzY1fU=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ProtectedRoute","children","_s","auth","setAuth","navigate","isAuthenticated","localStorage","getItem","userUID","userEmail","setItem","_c","$RefreshReg$"],"sources":["/Users/ddc/Documents/GitHub/code-golf/Website Stuff/Current Version/V3/my-app/frontend/src/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ProtectedRoute({ children }) {\n  const [auth, setAuth] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\n    const userUID = localStorage.getItem('userUID');\n    const userEmail = localStorage.getItem('userEmail');\n\n    if (!isAuthenticated || !userUID || !userEmail) {\n      // If tampering is detected, set isAuthenticated to \"Nice Try\"\n      if (isAuthenticated && (!userUID || !userEmail)) {\n        localStorage.setItem('isAuthenticated', 'Nice Try');\n      }\n      navigate('/login'); // Redirect to login\n    } else {\n      setAuth(true); // Set authenticated state to true\n    }\n  }, [navigate]);\n\n  return auth ? children : null; // Render children (protected page) only if authenticated\n}\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;IAC1E,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC/C,MAAME,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAI,CAACF,eAAe,IAAI,CAACG,OAAO,IAAI,CAACC,SAAS,EAAE;MAC9C;MACA,IAAIJ,eAAe,KAAK,CAACG,OAAO,IAAI,CAACC,SAAS,CAAC,EAAE;QAC/CH,YAAY,CAACI,OAAO,CAAC,iBAAiB,EAAE,UAAU,CAAC;MACrD;MACAN,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,OAAOF,IAAI,GAAGF,QAAQ,GAAG,IAAI,CAAC,CAAC;AACjC;AAACC,EAAA,CArBQF,cAAc;EAAA,QAEJD,WAAW;AAAA;AAAAa,EAAA,GAFrBZ,cAAc;AAuBvB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}