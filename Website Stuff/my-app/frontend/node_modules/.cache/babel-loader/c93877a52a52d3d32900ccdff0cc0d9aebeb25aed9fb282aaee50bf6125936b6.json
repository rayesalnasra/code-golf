{"ast":null,"code":"// src/Login.js\nimport React,{useState}from'react';import{useNavigate}from'react-router-dom';import{auth}from'./firebase';// Import Firebase auth\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();try{const userCredential=await auth.signInWithEmailAndPassword(email,password);const idToken=await userCredential.user.getIdToken();// Send the ID token to your server to handle sessions\nawait fetch('/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token:idToken})});// Redirect to home page after successful login\nnavigate('/home');}catch(error){setError('Invalid email or password. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[\" \",/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error})]})]});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","auth","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","userCredential","signInWithEmailAndPassword","idToken","user","getIdToken","fetch","method","headers","body","JSON","stringify","token","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["/Users/ddc/Documents/GitHub/code-golf/Website Stuff/Current Version/V3/my-app/frontend/src/Login.js"],"sourcesContent":["// src/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from './firebase'; // Import Firebase auth\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const userCredential = await auth.signInWithEmailAndPassword(email, password);\n      const idToken = await userCredential.user.getIdToken();\n\n      // Send the ID token to your server to handle sessions\n      await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token: idToken }),\n      });\n\n      // Redirect to home page after successful login\n      navigate('/home');\n    } catch (error) {\n      setError('Invalid email or password. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"container\"> {/* Add the container class */}\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        /><br /><br />\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        /><br /><br />\n        <button type=\"submit\">Login</button>\n        {error && <p>{error}</p>}\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,IAAI,KAAQ,YAAY,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnC,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACf,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAc,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAc,WAAW,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAhB,IAAI,CAACiB,0BAA0B,CAACX,KAAK,CAAEE,QAAQ,CAAC,CAC7E,KAAM,CAAAU,OAAO,CAAG,KAAM,CAAAF,cAAc,CAACG,IAAI,CAACC,UAAU,CAAC,CAAC,CAEtD;AACA,KAAM,CAAAC,KAAK,CAAC,YAAY,CAAE,CACxBC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,KAAK,CAAET,OAAQ,CAAC,CACzC,CAAC,CAAC,CAEF;AACAN,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAE,MAAOF,KAAK,CAAE,CACdC,QAAQ,CAAC,8CAA8C,CAAC,CAC1D,CACF,CAAC,CAED,mBACEP,KAAA,QAAKwB,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,GAAC,cAC1B3B,IAAA,OAAA2B,QAAA,CAAI,OAAK,CAAI,CAAC,cACdzB,KAAA,SAAM0B,QAAQ,CAAEjB,WAAY,CAAAgB,QAAA,eAC1B3B,IAAA,UAAO6B,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,QAAM,CAAO,CAAC,cACrC3B,IAAA,UACE8B,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVC,KAAK,CAAE5B,KAAM,CACb6B,QAAQ,CAAGrB,CAAC,EAAKP,QAAQ,CAACO,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE,CAC1CG,QAAQ,MACT,CAAC,cAAAnC,IAAA,QAAK,CAAC,cAAAA,IAAA,QAAK,CAAC,cACdA,IAAA,UAAO6B,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3C3B,IAAA,UACE8B,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,UAAU,CACbC,KAAK,CAAE1B,QAAS,CAChB2B,QAAQ,CAAGrB,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACT,CAAC,cAAAnC,IAAA,QAAK,CAAC,cAAAA,IAAA,QAAK,CAAC,cACdA,IAAA,WAAQ8B,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,OAAK,CAAQ,CAAC,CACnCnB,KAAK,eAAIR,IAAA,MAAA2B,QAAA,CAAInB,KAAK,CAAI,CAAC,EACpB,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}